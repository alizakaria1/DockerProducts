name: Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List directory contents for debugging
        run: ls -R

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install dependencies
        run: dotnet restore C:/PracticeProjects/DockerProducts/DockerProducts/Products.Sln.sln

      - name: Build
        run: dotnet build C:/PracticeProjects/DockerProducts/DockerProducts/Products.Sln.sln --configuration Release --no-restore

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract current version
        id: extract_version
        run: |
          # Fetch all tags
          git fetch --tags

          # Get the latest tag version matching 'v[0-9]*' pattern
          if git tag --list | grep -q "^v[0-9]*$"; then
            CURRENT_VERSION=$(git tag --list | grep "^v[0-9]*$" | sort -V | tail -n 1)
            echo "Current version: $CURRENT_VERSION"
            NEXT_VERSION=v$(( ${CURRENT_VERSION#v} + 1 ))
          else
            NEXT_VERSION=v1
          fi

          echo "Next version: $NEXT_VERSION"
          echo "VERSION=$NEXT_VERSION" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          docker build -t alizakaria/productsapi:${{ env.VERSION }} .

      - name: Push Docker image
        run: |
          docker push alizakaria/products:${{ env.VERSION }}

      - name: Create new tag
        run: |
          git tag ${{ env.VERSION }}
          git push origin ${{ env.VERSION }}
